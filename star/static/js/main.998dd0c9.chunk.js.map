{"version":3,"sources":["img/preloader.svg","components/Header/Nav/Nav.js","components/Header/RandomPlanet/RandomPlanet.js","api/api.js","components/Header/RandomPlanet/RandomPlanetContainer.js","components/Header/Header.js","components/Preloader/Preloader.js","components/ItemDetail/ItemDetail.js","components/ItemList/ItemList.js","components/App/App.js","index.js"],"names":["module","exports","Nav","state","isMenu","changeClass","setState","showHamburger","this","showClose","className","to","onClick","React","Component","RandomPlanet","props","id","name","diameter","population","rotation_period","src","alt","instance","axios","baseURL","getPlanet","get","then","response","data","getAllPlanets","getPeople","getPerson","getAllStarships","getStarship","RandomPlanetContainer","showRandomPlanet","random","Math","ceil","interval","setInterval","clearInterval","Header","Preloader","preloader","ItemDetailContainer","isPreloader","getItemDetail","getData","match","params","prevProps","img","descr1","descr2","descr3","ItemDetail","withRouter","ItemListContainer","allPeople","getAllItem","results","renderItemList","map","e","key","url","history","push","console","log","itemOrPreload","ItemList","App","path","exact","render","gender","birth_year","eye_color","model","passengers","length","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.998dd0c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.7a203d44.svg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../header.scss';\r\nclass Nav extends React.Component{\r\n    state={\r\n        isMenu: false\r\n    }\r\n    changeClass=()=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                isMenu: !state.isMenu\r\n            }\r\n        })\r\n    }\r\n   render(){\r\n       let showHamburger = this.state.isMenu ? \"mobile_nav\": \"mobile_nav_none\";\r\n       let showClose = this.state.isMenu ? \"hamburger_close\" : \"hamburger\";\r\n    return(\r\n        <nav className=\"menu navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Star</Link>\r\n            <div className=\"collapse navbar-collapse\" >\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/people/\">Peopel</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/planets/\">Planets</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"nav-link\" to=\"/starships/\">Starships</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div onClick={this.changeClass} className={showClose}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </div>\r\n            <div className={showHamburger} >\r\n                <ul className=\"\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link onClick={this.changeClass} className=\"nav-link active\" to=\"/\">Home </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link onClick={this.changeClass} className=\"nav-link\" to=\"/people/\">Peopel</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link onClick={this.changeClass} className=\"nav-link\" to=\"/planets/\">Planets</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link onClick={this.changeClass} className=\"nav-link\" to=\"/starships/\">Starships</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n   }\r\n}\r\nexport default Nav;","import React from 'react';\r\nimport './randomPlanet.scss';\r\nconst RandomPlanet = (props)=>{\r\n    let {id, name, diameter, population, rotation_period} = props.state;\r\n    return(\r\n        <section className=\"container random_planet\">\r\n            <div className=\"jumbotron row random_block\">\r\n                <div className=\"col-12 col-lg-5\"> \r\n                    <img className=\"img_random\" src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"planet-icon\"></img> \r\n                </div>\r\n                <div className=\"col-12 col-lg-7\">\r\n                    <h1 className=\"display-7\">{name}</h1>\r\n                    <span className=\"lead\">Population {population} </span>\r\n                    <hr className=\"my-2\"></hr>\r\n                    <span className=\"lead\">Rotation period {rotation_period}</span>\r\n                    <hr className=\"my-2\"></hr>\r\n                    <span className=\"lead\">Diameter {diameter}</span>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default RandomPlanet;","import * as axios from 'axios';\r\nlet instance = axios.create({\r\n    baseURL: \"https://swapi.co/api/\"\r\n});\r\nexport const getPlanet = (id)=>{\r\n    return instance.get(`planets/${id}`).then((response)=>{\r\n       return response.data\r\n    })\r\n}\r\nexport const getAllPlanets = ()=>{\r\n    return instance.get(`planets`).then((response)=>{\r\n       return response.data\r\n    })\r\n}\r\nexport const getPeople = ()=>{\r\n    return instance.get(`people`).then((response)=>{\r\n        return response.data\r\n     })\r\n}\r\nexport const getPerson = (id)=>{\r\n    return instance.get(`people/${id}`).then((response)=>{\r\n        return response.data\r\n     })\r\n}\r\nexport const getAllStarships = ()=>{\r\n    return instance.get(`starships`).then((response)=>{\r\n       return response.data\r\n    })\r\n}\r\nexport const getStarship = (id)=>{\r\n    return instance.get(`starships/${id}`).then((response)=>{\r\n       return response.data\r\n    })\r\n}","import React from 'react';\r\nimport RandomPlanet from './RandomPlanet';\r\nimport {getPlanet} from '../../../api/api';\r\n class RandomPlanetContainer extends React.Component{\r\n     state={\r\n         name: null,\r\n         diameter: null,\r\n         population: null,\r\n         rotation_period: null,\r\n         id: null\r\n     }\r\n     componentDidMount(){\r\n        this.showRandomPlanet()\r\n        this.interval = setInterval(this.showRandomPlanet, 7000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n    showRandomPlanet =()=>{\r\n        let random = Math.ceil(Math.random()*10);\r\n        getPlanet(random).then((data)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    name: data.name,\r\n                   diameter: data.diameter,\r\n                  population: data.population,\r\n                  rotation_period: data.rotation_period,\r\n                  id: random\r\n                }\r\n            })\r\n       })\r\n    }\r\n     render(){\r\n         return(\r\n            <RandomPlanet state={this.state}/>\r\n         )\r\n     }\r\n }\r\n export default RandomPlanetContainer;","import React from 'react';\r\nimport  './header.scss';\r\nimport Nav from './Nav/Nav';\r\nimport RandomPlanetContainer from './RandomPlanet/RandomPlanetContainer';\r\n class Header extends React.Component{\r\n     render(){\r\n         return(\r\n             <header>\r\n                <Nav/>\r\n                <RandomPlanetContainer/>\r\n             </header>\r\n         )\r\n     }\r\n }\r\n export default Header;","import React from 'react';\r\nimport  './preloader.scss';\r\nimport preloader from '../../img/preloader.svg';\r\nconst Preloader = ()=>{\r\n    return(\r\n            <img className=\"preloader\" alt=\"preloader\" src ={preloader}></img>\r\n       \r\n    )\r\n}\r\nexport default Preloader;","import React from 'react';\r\nimport './itemDetail.scss';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport {withRouter} from 'react-router-dom';\r\nclass ItemDetailContainer extends React.Component{\r\n    state={\r\n        name: null,\r\n        data: null,\r\n        isPreloader: true\r\n    }\r\n    componentDidMount(){\r\n        this.getItemDetail()\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps != this.props){\r\n            this.getItemDetail()\r\n        }\r\n    }\r\n    getItemDetail = ()=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                isPreloader: true\r\n            }\r\n        })\r\n        this.props.getData(this.props.match.params.id).then((data)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    name: data.name,\r\n                    data: data,\r\n                    isPreloader: false\r\n                }\r\n            })\r\n        })\r\n    }\r\n   render(){\r\n        if(this.state.isPreloader){\r\n            return <Preloader/>\r\n        }\r\n        return(\r\n            <section className=\"container row jumbotron description col-12 col-lg-6\">\r\n                <div className=\"col-12 \" >\r\n                    <img className=\"people_img\"src={`https://starwars-visualguide.com/assets/img/${this.props.img()}/${this.props.match.params.id}.jpg`} alt=\"Characters\"/>\r\n                </div>\r\n                <div className=\"col-12 \">\r\n                    <div>\r\n                        <h2 className=\"display-7\">{this.state.name}</h2>\r\n                        <span className=\"lead\">{this.props.descr1(this.state.data)}</span>\r\n                        <hr className=\"my-2\"></hr>\r\n                        <span className=\"lead\">{this.props.descr2(this.state.data)}</span>\r\n                        <hr className=\"my-2\"></hr>\r\n                        <span className=\"lead\">{this.props.descr3(this.state.data)}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n    )\r\n   }\r\n}\r\nlet ItemDetail = withRouter(ItemDetailContainer);\r\nexport default ItemDetail;\r\n\r\n","import React from 'react';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './itemList.scss';\r\nclass ItemListContainer extends React.Component{\r\n    state={\r\n        allPeople: [],\r\n        isPreloader: true\r\n    }\r\n    componentDidMount(){\r\n        this.getAllItem()\r\n        this.renderItemList()\r\n    }\r\n    getAllItem = ()=>{\r\n        this.props.getData().then((data)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    allPeople: data.results,\r\n                    isPreloader: false\r\n                }\r\n            })\r\n        })\r\n    }\r\n    renderItemList = ()=>{\r\n         return   this.state.allPeople.map((e)=>{\r\n             let reg = /\\/([0-9]*)\\/$/;\r\n             let key = e.url.match(reg)[1];\r\n            let addLink = ()=>{\r\n                this.props.history.push(key)\r\n            }\r\n            return (\r\n                <li onClick={()=> addLink()} className=\"container list-group-item list-group-item-action\" key={key}>{e.name}</li>\r\n            )\r\n            })\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        let itemOrPreload = this.state.isPreloader ? <Preloader/> : this.renderItemList();\r\n        return(\r\n            <ul className=\"container col-12 col-lg-4 mb\">\r\n                {itemOrPreload}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nlet ItemList = withRouter(ItemListContainer);\r\nexport default ItemList;\r\n","import React from 'react';\r\nimport { BrowserRouter,Route } from 'react-router-dom';\r\nimport './app.scss';\r\nimport Header from '../Header/Header';\r\nimport ItemDetail from '../ItemDetail/ItemDetail';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport {getPeople, getAllPlanets, getAllStarships, getPerson, getPlanet, getStarship} from '../../api/api';\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header/>\r\n                    <Route path=\"/\" exact render={()=> <h1 className=\"text-center\"> Welcome to Star Worlds</h1>}/>\r\n                    <div className=\"row container center\">\r\n                            <Route path=\"/people\" render={()=> <ItemList getData={getPeople}/>} />\r\n                          <Route path='/people/:id' render={()=> <ItemDetail \r\n                                                                    getData={getPerson}\r\n                                                                    img={()=> \"characters\" }\r\n                                                                    descr1={(data)=> `Gender ${data.gender} `}\r\n                                                                    descr2={(data)=> `Birth Year ${data.birth_year}`}\r\n                                                                    descr3={(data)=> `Eye color ${data.eye_color}`} />} />  \r\n                    </div>\r\n                    <div className=\"row container center\">\r\n                             <Route path='/planets' render={()=> <ItemList getData={getAllPlanets}/>} />\r\n                        <Route path='/planets/:id' render={()=> <ItemDetail \r\n                                                                    getData={getPlanet}\r\n                                                                    img={()=> \"planets\"}\r\n                                                                    descr1={(data)=> `Diameter ${data.diameter}`}\r\n                                                                    descr2={(data)=> `Population ${data.population}`}\r\n                                                                    descr3={(data)=> `Rotation period ${data.rotation_period}`} />} /> \r\n                    </div>\r\n                    <div className=\"row container center\">\r\n                             <Route path='/starships' render={()=> <ItemList getData={getAllStarships}/>} />\r\n                        <Route path='/starships/:id' render={()=> <ItemDetail \r\n                                                                    getData={getStarship}\r\n                                                                    img={()=> \"starships\"}\r\n                                                                    descr1={(data)=> `Model ${data.model}`}\r\n                                                                    descr2={(data)=> `Passengers ${data.passengers}`}\r\n                                                                    descr3={(data)=> `Length ${data.length}`}  />} /> \r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}