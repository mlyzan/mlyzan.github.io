{"version":3,"sources":["components/PlanetDetails/PlanetDetails.module.scss","components/StarshipsDetails/StarshipsDetails.module.scss","components/RandomPlanet/RandomPlanet.module.scss","components/Header/Header.module.scss","components/App/App.module.scss","components/Error/Error.module.scss","components/Preloader/Preloader.module.scss","img/preloader.svg","components/Header/Header.js","components/PersonDetails/ItemPerson.js","services/swapi-service.js","components/Preloader/Preloader.js","components/Error/Error.js","components/PersonDetails/PersonDetailsContainer.js","components/PlanetDetails/ItemPlanet.js","components/PlanetDetails/PlanetDetailsContainer.js","components/StarshipsDetails/ItemStarships.js","components/StarshipsDetails/StarshipsDetailsContainer.js","components/RandomPlanet/RandomPlanet.js","components/RandomPlanet/RandomPlanetContainer.js","components/App/App.js","index.js","components/PersonDetails/PersonDetails.module.scss"],"names":["module","exports","Gamburger","props","hide","className","s","overlay","nav_gamburger","id","onClick","close","gamburger_ul","to","Header","state","gamburger","show","setState","this","header","nav","ul","React","Component","ItemPerson","person","name","url","showDetail","key","match","item","SwapiService","_apiBase","getAllPeople","getResource","getPerson","getAllPlanets","getPlanet","getAllStarships","getStarship","fetch","res","ok","Error","status","json","Preloader","preloader","alt","src","error","boom","PersonDetailsRouter","withRouter","gender","birth_year","eye_color","params","img","text","hr","PersonDetailsContainers","swapiServise","allPeople","preload","then","results","catch","newError","renderItemList","map","e","history","push","renderPersonDetails","choose","block","render_person_details","PersonDetailsContainer","ItemPlanet","planet","PlanetDetails","rotation_period","diameter","population","PlanetDetailsContainers","allPlanets","renderPlanetDetails","render_planet_details","PlanetDetailsContainer","ItemStarships","starship","StarshipsDetails","length","passengers","model","StarshipsDetailsContainers","allStarships","renderStarshipsDetails","StarshipsDetailsContainer","RandomPlanet","planetName","rotation","RandomPlanetContainer","loading","repeatRandom","setInterval","swapiService","Math","floor","random","onError","whatRender","clearInterval","random_block","App","renderDetail","renderDetailPlanet","newComponent","path","render","exact","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.1b0068f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PlanetDetails_block__4hb9v\",\"choose\":\"PlanetDetails_choose__Q_g5U\",\"render_item_list\":\"PlanetDetails_render_item_list__2ynBN\",\"img\":\"PlanetDetails_img__1ZVw_\",\"hr\":\"PlanetDetails_hr__1kV6E\",\"items\":\"PlanetDetails_items__1jTcc\",\"item\":\"PlanetDetails_item__G2HER\",\"render_planet_details\":\"PlanetDetails_render_planet_details__1aPWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"StarshipsDetails_block__32p7W\",\"choose\":\"StarshipsDetails_choose__r6szL\",\"render_item_list\":\"StarshipsDetails_render_item_list__2xlYj\",\"img\":\"StarshipsDetails_img__3H3Cg\",\"hr\":\"StarshipsDetails_hr__3ie51\",\"items\":\"StarshipsDetails_items__23Ep9\",\"item\":\"StarshipsDetails_item__3DVQ8\",\"starship\":\"StarshipsDetails_starship__2hp_B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"random_block\":\"RandomPlanet_random_block__BXDVv\",\"block\":\"RandomPlanet_block__3YciE\",\"img\":\"RandomPlanet_img__1yxAG\",\"hr\":\"RandomPlanet_hr__1u-ti\",\"random_planet\":\"RandomPlanet_random_planet__1ZQ0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hesder\":\"Header_hesder__1vsRC\",\"overlay\":\"Header_overlay__4CHCY\",\"nav_gamburger\":\"Header_nav_gamburger__1l0u3\",\"close\":\"Header_close__1F_Pz\",\"gamburger_ul\":\"Header_gamburger_ul__2IWZ5\",\"ul\":\"Header_ul__1xTUW\",\"nav\":\"Header_nav__3YTIi\",\"gamburger\":\"Header_gamburger__1Xh0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"App_block__3Df9G\",\"person\":\"App_person__2VDRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2OBL_\",\"boom\":\"Error_boom__21mUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2gAx1\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.7a203d44.svg\";","import React from 'react';\r\nimport s from './Header.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\nconst Gamburger = (props)=>{\r\n    let {hide}= props;\r\n    return(\r\n        <div className={s.overlay}>\r\n            <div className={s.nav_gamburger} id=\"navbarColor02\">\r\n                <div onClick={hide} className={s.close}>&times;</div>\r\n                    <ul className={s.gamburger_ul}>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink onClick={hide} className=\"nav-link\" to=\"/people/\">People </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink onClick={hide} className=\"nav-link\" to=\"/planets/\">Planets</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink onClick={hide} className=\"nav-link\" to=\"/starships/\">Starships</NavLink>\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nclass Header extends React.Component{\r\n    state={\r\n        gamburger: false\r\n    }\r\n    show = ()=>{\r\n        this.setState((state)=>{\r\n            return {\r\n                ...state,\r\n                gamburger: true\r\n            }\r\n        })\r\n    }\r\n    hide= ()=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                ...state,\r\n                gamburger: false\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.gamburger){\r\n            return <Gamburger hide={this.hide}/>\r\n        }\r\n        return(\r\n            <div className={s.header}>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">Star DB</NavLink>\r\n                    <div className={s.nav} id=\"navbarColor02\">\r\n                        <ul className={`navbar-nav mr-auto ${s.ul}`}>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/people/\">People </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/planets/\">Planets</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/starships/\">Starships</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div onClick={()=> this.show()} className={s.gamburger}>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    \r\n                </nav>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport s from './PersonDetails.module.scss';\r\nconst ItemPerson= (props)=>{\r\n   \r\n       let {person: {name, url}, showDetail} = props;\r\n       let reg = /\\/([0-9]*)\\/$/;\r\n       let key = url.match(reg)[1];\r\n    return (\r\n        <div>\r\n            <ul  className=\" list-group\">\r\n                <li key={key} onClick={()=> showDetail(key)} className={`list-group-item d-flex justify-content-between align-items-center ${s.item}`}>\r\n                   <span> {name}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemPerson;","class SwapiService{\r\n    _apiBase = \"https://swapi.co/api/\"\r\n    async getResource(url){\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if(!res.ok){\r\n            throw new Error(`could not fetch ${url}, received ${res.status}`)\r\n        }\r\n        return await res.json();\r\n    }\r\n    getAllPeople =()=>{\r\n        return this.getResource(`people/`)\r\n    }\r\n    getPerson = (id)=>{\r\n        return this.getResource(`people/${id}`)\r\n    }\r\n    getAllPlanets =()=>{\r\n        return this.getResource(`planets/`)\r\n    }\r\n    getPlanet =(id)=>{\r\n        return this.getResource(`planets/${id}`)\r\n    }\r\n    getAllStarships = ()=>{\r\n        return this.getResource(`starships/`)\r\n    }\r\n    getStarship = (id)=>{\r\n        return this.getResource(`starships/${id}`)\r\n    }\r\n}\r\nexport default SwapiService;","import React from 'react';\r\nimport s from './Preloader.module.scss';\r\nimport preloader from '../../img/preloader.svg';\r\nconst Preloader = ()=>{\r\n    return(\r\n        <div className={` ${s.preloader}`}>\r\n            <img alt=\"preloader\" src ={preloader}></img>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","import React from 'react';\r\nimport s from './Error.module.scss';\r\nconst Error = ()=>{\r\n    return(\r\n        <div className={`jumbotron ${s.error}`}>\r\n            <span className={s.boom}>BOOM!</span>\r\n            <span>something has gone terribly wrong</span> <br/>\r\n            <span>(but we already sent droids to fix it)</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport s from './PersonDetails.module.scss';\r\nimport ItemPerson from './ItemPerson';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport Error from '../Error/Error';\r\nimport {withRouter} from 'react-router-dom';\r\nconst PersonDetails = (props)=>{\r\n    let {person:{name,gender,birth_year,eye_color}} = props;\r\n    return (\r\n        <div key={`${props.match.params.id}`} >\r\n            <div> <img className={s.img} alt=\"person\" src={`https://starwars-visualguide.com/assets/img/characters/${props.match.params.id}.jpg`}></img>  </div>\r\n            <div>\r\n                <h2 className=\"display-7\">{name}</h2>\r\n                <span className={`lead ${s.text}`}>Gender {gender}</span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Birth Year {birth_year}</span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Eye color {eye_color}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nlet PersonDetailsRouter = withRouter(PersonDetails);\r\nclass PersonDetailsContainers extends React.Component{\r\n    swapiServise = new SwapiService();\r\n    state = {\r\n        allPeople: null,\r\n        person: null,\r\n        preload: false\r\n    }\r\n    componentDidMount(){\r\n        this.getAllPeople();\r\n\r\n    }\r\n    getAllPeople =()=>{\r\n        this.swapiServise.getAllPeople().then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    allPeople: res.results\r\n                }\r\n            })\r\n        }).catch(this.newError())\r\n    }\r\n    newError = ()=>{\r\n        return <Error/>\r\n    }\r\n    renderItemList = ()=>{\r\n        if(this.state.allPeople){\r\n         return   this.state.allPeople.map((e)=>{\r\n                         return <ul key={e.url}> <ItemPerson  showDetail={this.showDetail} person={e}/></ul>\r\n            })\r\n        }\r\n    }\r\n    showDetail = (key)=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                ...state,\r\n                preload: true\r\n            }\r\n        });\r\n        this.swapiServise.getPerson(key).then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    person: res,\r\n                    preload: false\r\n                }\r\n            })\r\n        });\r\n        this.props.history.push(key)\r\n    }\r\n    renderPersonDetails = ()=>{\r\n        if(this.state.person === null && this.state.preload === false){\r\n            return(<div className={s.choose}>Choose item of list</div>)\r\n        }else if(this.state.preload === true){\r\n            return <Preloader/>\r\n        }else if(this.state.person && this.state.preload === false){\r\n            return <PersonDetailsRouter  person={this.state.person}/>\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div key=\"personDetail\" className={`row jumbotron ${s.block}`}>\r\n               <div className={`col-md-4 col-sm-12`}>{this.renderItemList()}</div>\r\n               <div className={`col-md-6 offset-md-2 col-sm-12 ${s.render_person_details}`}>{this.renderPersonDetails()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst PersonDetailsContainer = withRouter(PersonDetailsContainers)\r\nexport default PersonDetailsContainer;","import React from 'react';\r\nimport s from './PlanetDetails.module.scss';\r\nconst ItemPlanet= (props)=>{\r\n       let {planet: {name,url},showDetail} = props;\r\n       let reg = /\\/([0-9]*)\\/$/;\r\n       let key = url.match(reg)[1];\r\n    return (\r\n        <div>\r\n            <ul className=\" list-group\">\r\n                <li onClick={()=> showDetail(key)}  className={`list-group-item d-flex justify-content-between align-items-center ${s.item}`}>\r\n                   <span> {name}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemPlanet;","import React from 'react';\r\nimport s from './PlanetDetails.module.scss';\r\nimport ItemPlanet from './ItemPlanet';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport Error from '../Error/Error';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst PlanetDetails = (props)=>{\r\n    let {id,planet:{name, rotation_period, diameter,population}} = props;\r\n    return (\r\n        <div >\r\n            <div> <img className={s.img} alt=\"planet\" src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}></img>  </div>\r\n            <div>\r\n                <h1 className=\"display-7\">{name}</h1>\r\n                <span className={`lead ${s.text}`}>Rotation period {rotation_period} </span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Diameter {diameter} </span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Population {population} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass PlanetDetailsContainers extends React.Component{\r\n    swapiServise = new SwapiService();\r\n    state = {\r\n        allPlanets: null,\r\n        planet: null,\r\n        preload: false\r\n    }\r\n    componentDidMount(){\r\n        this.getAllPlanets();\r\n\r\n    }\r\n    getAllPlanets =()=>{\r\n        this.swapiServise.getAllPlanets().then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    allPlanets: res.results\r\n                }\r\n            })\r\n        }).catch(this.newError())\r\n    }\r\n    newError = ()=>{\r\n        return <Error/>\r\n    }\r\n    renderItemList = ()=>{\r\n        if(this.state.allPlanets){\r\n         return   this.state.allPlanets.map((e)=>{\r\n                         return <ul key={e.url}><ItemPlanet showDetail={this.showDetail} planet={e}/></ul>\r\n            })\r\n        }\r\n    }\r\n    showDetail = (key)=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                ...state,\r\n                preload: true\r\n            }\r\n        });\r\n        this.props.history.push(key)\r\n        this.swapiServise.getPlanet(key).then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    planet: res,\r\n                    preload: false\r\n                }\r\n            })\r\n        });\r\n    }\r\n    renderPlanetDetails = ()=>{\r\n        if(this.state.planet === null && this.state.preload === false){\r\n            return(<div className={s.choose}>Choose item of list</div>)\r\n        }else if(this.state.preload === true){\r\n            return <Preloader/>\r\n        }else if(this.state.planet && this.state.preload === false){\r\n            return <PlanetDetails id={this.props.match.params.id} planet={this.state.planet}/>\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={`row jumbotron ${s.block}`}>\r\n               <div className={`col-md-4 col-sm-12 `}>{this.renderItemList()}</div>\r\n               <div className={`col-md-6 offset-md-2 col-sm-12 ${s.render_planet_details}`}>{this.renderPlanetDetails()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet PlanetDetailsContainer = withRouter(PlanetDetailsContainers);\r\nexport default PlanetDetailsContainer;","import React from 'react';\r\nimport s from './StarshipsDetails.module.scss';\r\nconst ItemStarships= (props)=>{\r\n       let {starship: {name,url}, showDetail} = props;\r\n       let reg = /\\/([0-9]*)\\/$/;\r\n       let key = url.match(reg)[1];\r\n    return (\r\n        <div>\r\n            <ul className=\" list-group\">\r\n                <li onClick={()=> showDetail(key)}  className={`list-group-item d-flex justify-content-between align-items-center ${s.item}`}>\r\n                   <span> {name}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ItemStarships;","import React from 'react';\r\nimport s from './StarshipsDetails.module.scss';\r\nimport ItemStarships from './ItemStarships';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport Error from '../Error/Error';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst StarshipsDetails = (props)=>{\r\n    let {id,starship:{name, length,passengers,model}} = props;\r\n    return (\r\n        <div >\r\n            <div> <img className={s.img} alt=\"starships\" src={`https://starwars-visualguide.com/assets/img/starships/${id}.jpg`}></img>  </div>\r\n            <div>\r\n                <h1 className=\"display-7\">{name}</h1>\r\n                <span className={`lead ${s.text}`}>Length {length} </span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Model {model} </span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Passengers {passengers} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass StarshipsDetailsContainers extends React.Component{\r\n    swapiServise = new SwapiService();\r\n    state = {\r\n        allStarships: null,\r\n        starship: null,\r\n        id: null,\r\n        preload: false\r\n    }\r\n    componentDidMount(){\r\n        this.getAllStarships();\r\n\r\n    }\r\n    getAllStarships =()=>{\r\n        this.swapiServise.getAllStarships().then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    allStarships: res.results\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n    renderItemList = ()=>{\r\n        if(this.state.allStarships){\r\n         return   this.state.allStarships.map((e)=>{\r\n                         return <ul key={e.url}><ItemStarships showDetail={this.showDetail} starship={e}/></ul>\r\n            })\r\n        }\r\n    }\r\n    showDetail = (key)=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                ...state,\r\n                preload: true\r\n            }\r\n        });\r\n        this.props.history.push(key)\r\n        this.swapiServise.getStarship(key).then((res)=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    starship: res,\r\n                    preload: false\r\n                }\r\n            })\r\n        }).catch(this.newError())\r\n    }\r\n    newError = ()=>{\r\n        return <Error/>\r\n    }\r\n    renderStarshipsDetails = ()=>{\r\n        if(this.state.starship === null && this.state.preload === false){\r\n            return(<div className={s.choose}>Choose item of list</div>)\r\n        }else if( this.state.preload === true){\r\n            return <Preloader/>\r\n        }else if(this.state.starship && this.state.preload === false){\r\n            return <StarshipsDetails id={this.props.match.params.id} starship={this.state.starship}/>\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={`row jumbotron ${s.block}`}>\r\n               <div className={`col-md-4 col-sm-12`}>{this.renderItemList()}</div>\r\n               <div className={`col-md-6 offset-md-2 col-sm-12 ${s.starship} `}>{this.renderStarshipsDetails()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet StarshipsDetailsContainer = withRouter(StarshipsDetailsContainers);\r\nexport default StarshipsDetailsContainer;","import React from 'react';\r\nimport s from \"./RandomPlanet.module.scss\";\r\nconst RandomPlanet = (props)=>{\r\n    let { id, planetName, population, rotation, diameter} = props.state;\r\n    return(\r\n        <div className={s.block}>\r\n            <div> <img className={s.img} src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"planet-icon\"></img>  </div>\r\n            <div>\r\n                <h1 className=\"display-7\">{planetName}</h1>\r\n                <span className={`lead ${s.text}`}>Population {population}</span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Rotation period {rotation}</span>\r\n                <hr className={`my-4 ${s.hr}`}></hr>\r\n                <span className={`lead ${s.text}`}>Diameter {diameter}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default RandomPlanet;","import React from 'react';\r\nimport s from './RandomPlanet.module.scss';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport RandomPlanet from './RandomPlanet';\r\nimport Error from '../Error/Error';\r\nclass  RandomPlanetContainer extends React.Component{\r\n    state = {\r\n        id: null,\r\n        planetName: null,\r\n        population: null,\r\n        rotation: null,\r\n        diameter: null,\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount(){\r\n        this.getPlanet();\r\n        this.repeatRandom();\r\n    }\r\n    repeatRandom= ()=>{\r\n        setInterval(this.getPlanet, 5000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.repeatRandom)\r\n    }\r\n    getPlanet = ()=>{\r\n        const swapiService = new SwapiService();\r\n        let id = Math.floor(Math.random()*10+1);\r\n        swapiService.getPlanet(id).then(({name, rotation_period, population, diameter})=>{\r\n            this.setState((state)=>{\r\n                return{\r\n                    ...state,\r\n                    planetName: name,\r\n                    population,\r\n                    rotation: rotation_period,\r\n                    diameter,\r\n                    id,\r\n                    loading: false\r\n                }\r\n            })\r\n        }).catch(this.onError)\r\n    }\r\n    onError = ()=>{\r\n        this.setState((state)=>{\r\n            return{\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        })\r\n    }\r\n    whatRender = ()=> {\r\n        if(this.state.loading && this.state.error === false){\r\n            return <Preloader/>\r\n        }else if( this.state.loading === false && this.state.error){\r\n            return <Error/>\r\n        }else{\r\n            return <RandomPlanet state={this.state}/>\r\n        }\r\n    }\r\n\r\n   render(){\r\n        return(\r\n            <div className={`jumbotron ${s.random_block}`}>\r\n                {this.whatRender()}\r\n            </div>\r\n        )\r\n   }\r\n}\r\nexport default RandomPlanetContainer;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport s from './App.module.scss';\r\nimport Header from '../Header/Header';\r\nimport PersonDetailsContainer from '../PersonDetails/PersonDetailsContainer';\r\nimport PlanetDetailsContainer from '../PlanetDetails/PlanetDetailsContainer';\r\nimport StarshipsDetailsContainer from '../StarshipsDetails/StarshipsDetailsContainer';\r\nimport RandomPlanetContainer from '../RandomPlanet/RandomPlanetContainer';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Preloader from '../Preloader/Preloader';\r\nclass App extends React.Component{\r\n    swapiServise = new SwapiService();\r\n    state = {\r\n        id:null,\r\n        person: null,\r\n        planet: null,\r\n        preloader: false\r\n    }\r\n   \r\n    renderDetail = (key)=>{\r\n        this.setState((state)=>{\r\n            return {\r\n                ...state,\r\n                preloader: true\r\n            }\r\n        });\r\n        this.renderPersonDetails();\r\n        this.swapiServise.getPerson(key)\r\n            .then((res)=>{\r\n                this.setState((state)=>{\r\n                    return{\r\n                        ...state,\r\n                        id: key,\r\n                        person: res,\r\n                        preloader:false\r\n                    }\r\n                })\r\n            })\r\n        \r\n    }\r\n    renderDetailPlanet = (key)=>{\r\n        this.setState((state)=>{\r\n            return {\r\n                ...state,\r\n                preloader: true\r\n            }\r\n        });\r\n        this.renderPersonDetails();\r\n        this.swapiServise.getPlanet(key)\r\n            .then((res)=>{\r\n                this.setState((state)=>{\r\n                    return{\r\n                        ...state,\r\n                        id: key,\r\n                        planet: res,\r\n                        preloader:false\r\n                    }\r\n                })\r\n            })\r\n        \r\n    }\r\n    renderPersonDetails = (newComponent)=>{\r\n        if(this.state.preloader){\r\n            return <div className={`col-md-7 offset-md-0 jumbotron ${s.person}`}> \r\n                    <Preloader/>\r\n                 </div>\r\n        }else if(!this.state.person){\r\n            return(\r\n                <div className={`col-md-7 offset-md-0 jumbotron ${s.person}`}> \r\n                    <span>Сhoose a character</span>\r\n                </div>\r\n            );\r\n        }else{\r\n            return newComponent\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header/>\r\n                    <RandomPlanetContainer/>\r\n                    <Route path=\"/\" render={()=> <h1>Welcome to starDB </h1>} exact/>\r\n                    <div className={s.block}>\r\n                        <Route path=\"/people/:id?\" render={()=> <PersonDetailsContainer/>}/>\r\n                    </div>\r\n                    <div className={s.block}>\r\n                         <Route path=\"/planets/:id?\" render={()=>  <PlanetDetailsContainer/>}/>\r\n                    </div>\r\n                    <div className={s.block}>\r\n                       <Route path=\"/starships/:id?\" render={()=>  <StarshipsDetailsContainer/>}/>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/App/App';\n\nReactDom.render(<App/>, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PersonDetails_block__2eVDu\",\"choose\":\"PersonDetails_choose__1i3qb\",\"render_item_list\":\"PersonDetails_render_item_list__1_Lol\",\"img\":\"PersonDetails_img__Hj5z9\",\"hr\":\"PersonDetails_hr__1-BUY\",\"items\":\"PersonDetails_items__2zQPL\",\"item\":\"PersonDetails_item__3YAUa\",\"active\":\"PersonDetails_active__3UDRn\",\"render_person_details\":\"PersonDetails_render_person_details__2YP2k\"};"],"sourceRoot":""}